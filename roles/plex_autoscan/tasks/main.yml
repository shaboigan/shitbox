#########################################################################
# Title:         Shitbox: Plex Autoscan Role                            #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/shaboigan/Shitbox                    #
# --                                                                    #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Check if Plex instance is defined
  ansible.builtin.set_fact:
    plex_name: "{{ plex_name | default(plex_instances[0]) }}"

- name: Import Services Task
  ansible.builtin.import_tasks: "subtasks/services.yml"

- name: Create plex_autoscan directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: 0775
    recurse: true
  with_items:
    - /opt/plex_autoscan

- name: Clone plex_autoscan repo 'HEAD'
  ansible.builtin.git:
    repo: https://github.com/l3uddz/plex_autoscan.git
    dest: /opt/plex_autoscan
    clone: true
    version: HEAD
    force: true
  become: true
  become_user: "{{ user.name }}"
  ignore_errors: true
  register: plex_autoscan_clone_status

- name: Clone plex_autoscan repo 'master'
  ansible.builtin.git:
    repo: https://github.com/saltyorg/l3uddz/plex_autoscan.git
    dest: /opt/plex_autoscan
    clone: true
    version: master
    force: true
  become: true
  become_user: "{{ user.name }}"
  when: plex_autoscan_clone_status is failed

- name: Set Python version
  ansible.builtin.set_fact:
    plex_autoscan_python: "{{ 'python3'
                           if ansible_distribution_version is version('20.04', '==')
                           else 'python3.8' }}"

- name: "Execute Python role"
  ansible.builtin.include_role:
    name: "python"
  vars:
    python_version: "3.8"
  when: ansible_distribution_version is version('22.04', '==')

- name: Check if venv folder exists
  ansible.builtin.stat:
    path: "/opt/plex_autoscan/venv"
  register: plex_autoscan_venv_folder

- name: Delete venv folder
  ansible.builtin.file:
    path: "/opt/plex_autoscan/venv"
    state: absent
  when: plex_autoscan_venv_folder.stat.exists

- name: Install pip requirements
  ansible.builtin.pip:
    requirements: /opt/plex_autoscan/requirements.txt
    virtualenv_python: "{{ plex_autoscan_python }}"
    virtualenv: "/opt/plex_autoscan/venv"
  become: true
  become_user: "{{ user.name }}"

- name: Find pip3 path
  ansible.builtin.find:
    paths: /opt/plex_autoscan/venv
    recurse: true
    patterns: 'pip3'
  register: files

- name: Path
  ansible.builtin.set_fact:
    plex_autoscan_bin_folder: "{{ files.files[0].path | dirname }}"

- name: Set 'scan.py' as executable
  ansible.builtin.file:
    path: /opt/plex_autoscan/scan.py
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: a+x

- name: Create script alias
  ansible.builtin.template:
    src: plex_autoscan.sh.j2
    dest: "{{ plex_autoscan_alias_path }}"
    mode: "0755"
    force: true

- name: Import 'plex_autoscan.service'
  ansible.builtin.template:
    src: plex_autoscan.service.j2
    dest: /etc/systemd/system/plex_autoscan.service
    mode: "0644"
    force: true

- name: Import Settings Task
  ansible.builtin.import_tasks: "subtasks/settings.yml"

- name: Start 'plex_autoscan.service'
  ansible.builtin.systemd:
    name: plex_autoscan
    state: started
    enabled: true
    daemon_reload: true
